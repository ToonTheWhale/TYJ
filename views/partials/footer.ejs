    <!-- popup code header  -->

    <dialog id="popup" class="popup">
      <h2>Selecteer een Pokémon</h2>
      <input
        type="text"
        id="myInput"
        onkeyup="filterPokemonByName()"
        placeholder="Pokemon zoeken ..."
      />
      <section class="image-container">
        <% for(let pokemon of pokemons) { %>
        <article>
          <figure>
            <img
              src="<%= pokemon.image %>"
              onclick="selectCurrentPokemon('<%= pokemon.name %>')"
            />
            <figcaption>
              <p><%= pokemon.name %></p>
            </figcaption>
          </figure>
        </article>
        <% } %>
      </section>
      <button onclick="closePopup()" id="button">Close</button>
    </dialog>
    <div id="overlay" class="overlay"></div>

<footer class="footer-1">
  <article>
    <p>
      <img src="/images/Logo.png" alt="" class="footer-logo">
    </p>
  </article>
  <article>
    <p><img src="/images/icons8-location-50.png" alt="" class="footer-icon">Ellermanstraat 33, 2060 Antwerpen<br>
      <img src="/images/icons8-phone-50.png" alt="" class="footer-icon"> +324 12 34 56 78
    </p>
  </article>
  <article>
    <p>Authors: TYJ <br>
      <a href="">info@TYJ-Pokémons.com</a>
    </p>
  </article>
</footer>
<footer class="footer-2">
  <p>&copy;TYJ 2024</p>
</footer>
<script>
  async function fetchAndProcessSinglePokemonData(pokemonID) {
    const response = await fetch(
      `https://pokeapi.co/api/v2/pokemon/${pokemonID}/#`
    );
    const singlePokemon = await response.json();
    const pokemonData = {
      id: singlePokemon.id,
      name: singlePokemon.name,
      types: singlePokemon.types.map((type) => type.type.name),
      image: singlePokemon.sprites.front_default,
      height: singlePokemon.height,
      weight: singlePokemon.weight,
      maxHP: singlePokemon.stats[0].base_stat,
      defense: singlePokemon.stats[2].base_stat,
      attack: singlePokemon.stats[1].base_stat,
    };
    return pokemonData;
  }

  // Functie om de pop-up te openen
  function openPopup() {
    document.getElementById("popup").style.display = "block";
    document.getElementById("overlay").style.display = "block";
  }

  // Functie om de pop-up te sluiten
  function closePopup() {
    document.getElementById("popup").style.display = "none";
    document.getElementById("overlay").style.display = "none";
  }

  function selectCurrentPokemon(pokemonName) {
    alert(`Jij hebt ${pokemonName} geselecteerd`);
    closePopup();
    fetchAndProcessSinglePokemonData(pokemonName).then((pokemon) => {
      switchToSelectedCurrentPokemon(pokemon);
    });
  }

  // Functie om een pokemon te selecteren
  function switchToSelectedCurrentPokemon(pokemon) {
    var defaultElement = document.getElementById('current-pokemon');
    defaultElement.src = pokemon.image;
  }

  // Functie om een Pokemon op naam te filteren
  function filterPokemonByName() {
    var input,
      filter,
      imageContainer,
      articles,
      figure,
      figcaption,
      p,
      i,
      txtValue;

    input = document.getElementById("myInput");
    filter = input.value.toUpperCase();
    imageContainer = document.querySelector(".image-container");
    articles = imageContainer.getElementsByTagName("article");

    for (i = 0; i < articles.length; i++) {
      figure = articles[i].getElementsByTagName("figure")[0];
      p = figure.getElementsByTagName("p")[0];
      txtValue = p.textContent || p.innerText;

      if (txtValue.toUpperCase().indexOf(filter) > -1) {
        articles[i].style.display = "";
      } else {
        articles[i].style.display = "none";
      }
    }
  }
</script>
</body>
</html>